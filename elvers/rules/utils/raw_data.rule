import os

rule link_fq1:
    input: lambda wildcards:"{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq1"])
    output: join(DATA_DIR,"{sample}_{unit}_1.fq.gz")
    run:
        print(input)
        full_input = os.path.abspath(str(input))
        print(full_input)
        full_output = os.path.abspath(str(output))
        shell("ln -s {full_input} {full_output}")

rule link_fq2:
    input: lambda wildcards:"{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq2"])
    output: join(DATA_DIR,"{sample}_{unit}_2.fq.gz")
    run:
        print(input)
        full_input = os.path.abspath(str(input))
        print(full_input)
        full_output = os.path.abspath(str(output))
        shell("ln -s {full_input} {full_output}")

rule ftpget_fq1:
    input: lambda wildcards: FTP.remote("{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq1"]), static=True, keep_local=True, immediate_close=True)
    output: join(DATA_DIR,"{sample}_{unit}_1.fq.gz")
    shell: "mv {input} {output}"

rule ftpget_fq2:
    input: lambda wildcards: FTP.remote("{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq2"]), static=True, keep_local=True, immediate_close=True)
    output: join(DATA_DIR,"{sample}_{unit}_2.fq.gz")
    shell: "mv {input} {output}"
