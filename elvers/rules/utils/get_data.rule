import os, sys
import elvers.utils.utils as ep

# should carry over from main snakefile.
# keeping here in case we want to use as standalone snake

urls_begin = ["http", "ftp"]

samples = config["samples"]

localrules: get_dbinfo, get_sbt

rule get_data_fq1:
    output: os.path.join(data_dir, "{sample}_1.fq.gz")
    params:
         filepath= lambda w: samples.at[w.sample,"fq1"]
    log: os.path.join(logs_dir, "get_data", "{sample}_1.get.log")
    threads: 1
    resources:
        mem_mb=1000,
        runtime=60
    run:
        if params.filepath.startswith(tuple(urls_begin)):
            shell("curl -L {params.filepath}  > {output}")
        else:
            full_input = os.path.abspath(str(params.fq_info))
            full_output = os.path.abspath(str(output))
            shell("ln -s {full_input} {full_output} 2> {log}")


rule get_data_fq2:
    output: os.path.join(data_dir, "{sample}_2.fq.gz")
    params:
         filepath= lambda w: samples.at[w.sample,"fq2"]
    log: os.path.join(logs_dir, "get_data", "{sample}_2.get.log")
    threads: 1
    resources:
        mem_mb=1000,
        runtime=60
    run:
        if params.filepath.startswith(tuple(urls_begin)):
            shell("curl -L {params.filepath}  > {output}")
        else:
            full_input = os.path.abspath(str(params.fq_info))
            full_output = os.path.abspath(str(output))
            shell("ln -s {full_input} {full_output} 2> {log}")
