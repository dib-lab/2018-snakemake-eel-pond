import os, re
from os.path import join

############
logs_dir  = config['eelpond_directories']['logs']
qc_dir   = config['multiqc']['eelpond_params']['outdir'] #input dir
multiqc_params = config['multiqc']['program_params'] # program params
###############

def get_multiqc_input(w):
    fastqc_outputs = [] 
    ext = '_fastqc.zip'
    for s, u in samples.iterrows():
        sample, unit = u['sample'],u['unit']
        if is_single_end(sample, unit):
            fastqc_outputs+=[join(qc_dir, f"{sample}_{unit}{ext}")]
        else:
            fastqc_outputs += [join(qc_dir, f"{sample}_{unit}_1{ext}")]
            fastqc_outputs += [join(qc_dir, f"{sample}_{unit}_2{ext}")]
    return fastqc_outputs


rule multiqc:
    input:
        get_multiqc_input
    output:
        join(qc_dir, "multiqc.html")
    params: 
        multiqc_params.get('extra', '')
    log:
        join(logs_dir, 'multiqc/multiqc.log')
    benchmark:
        join(logs_dir, 'multiqc/multiqc.benchmark')
    conda: "environment.yml"
    script: "wrapper.py"
