import os

data_dir = config['eelpond_directories']['outdirs']['input_data']
get_data_params = config['get_data']['program_params']

if get_data_params.get('download_data'):
    rule get_fq1:
        input: lambda wildcards: FTP.remote("{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq1"]), static=True, keep_local=True, immediate_close=True)
        output: join(data_dir,"{sample}_{unit}_1.fq.gz")
        shell: "mv {input} {output}"

    rule get_fq2:
        input: lambda wildcards: FTP.remote("{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq2"]), static=True, keep_local=True, immediate_close=True)
        output: join(data_dir,"{sample}_{unit}_2.fq.gz")
        shell: "mv {input} {output}"

else:
    rule link_fq1:
        input: lambda wildcards:"{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq1"])
        output: join(data_dir,"{sample}_{unit}_1.fq.gz")
        run:
            full_input = os.path.abspath(str(input))
            full_output = os.path.abspath(str(output))
            shell("ln -s {full_input} {full_output}")

    rule link_fq2:
        input: lambda wildcards:"{}".format(samples.loc[(wildcards.sample,wildcards.unit), "fq2"])
        output: join(data_dir,"{sample}_{unit}_2.fq.gz")
        run:
            full_input = os.path.abspath(str(input))
            full_output = os.path.abspath(str(output))
            shell("ln -s {full_input} {full_output}")
